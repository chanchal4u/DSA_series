package com.hashing;

// Find the sub-array which gives the sum in an array

import java.util.HashMap ;
public class SubArray_WithGiven_Sum {

	public static void main(String[] args) {
		
		int arr[] = {10, 15, -5, 20, -15, 10} ;
		int sum = 20 ;
		subArraySum(arr, sum);

	}
	
	public static void subArraySum(int arr[] , int sum) {
		
		int start = 0 ;
		int end = -1  ;
		int currSum = 0 ;
		
		HashMap<Integer, Integer> map = new HashMap<>();
		
		for(int i = 0 ; i < arr.length ; i++) {
			currSum += arr[i] ;  // adding current iteration element in currSum 
			
			if(currSum == sum ) {
				start = 0 ;
				end = i ;
				break ;
			}
			if(map.containsKey(currSum - sum)){
				start = map.get(currSum - sum) + 1 ;
				end = i ;
			}
			map.put( currSum, i) ;  // put each iteration's sum and then the index of latest element added 
				
		}
		
		// After traversing , publish the result
		if(end == -1) {
			System.out.println("No sub-array resulted in given sum");
		}
		else {
			System.out.println("start is : "+ start +","+ " end is : "+ end);
		}
		
		
	}

}
